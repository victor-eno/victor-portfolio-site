---
import { CollectionEntry, getCollection } from 'astro:content';
import DefaultLayout from '../../layouts/DefaultLayout.astro'

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}

type Props = CollectionEntry<'blog'>;
const post = Astro.props;
const { Content } = await post.render();
---

<DefaultLayout>
 <section>
  <article>
   <div class="heading">
    <h1 class="title">{post.data.title}</h1>
    <p> 
       {post.data.pubDate.toDateString()}
    </p>
   </div>
   <div class="content">
     <hr />
     <Content />
    </div>
  </article>
 </section>
</DefaultLayout>

<style>
  section {
    padding-top: 50px;
    background: linear-gradient(-45deg, #729ed7, #58c5ef, #230327, #042835);
    background-size: 400% 400%;
   }
   article {
     margin: 40px;
     padding: 20px 100px 200px 100px;
   }
   .heading {
    background-color: #6b4ee6;
    padding: 5em;
    border-radius: 30px 0px;
   }
   article h1 {
     color: rgb(107, 207, 254);
     font-size: 4em;
     font-weight: 900;
     line-height: 1em;
   }
   a {
     color: rgb(107, 207, 254);
     text-decoration: none;
     font-family: 'Poppins', Courier, monospace;
     font-weight: 700;
     cursor: pointer;
   }
   p {
     font-size: 25px;
     color: rgb(107, 207, 254);
     padding-top: 10px;
     font-weight: 600;
   }
   .content {
      color: rgb(222, 240, 255);
      font-size: 16px;
      font-weight: 200;
   }
   @media screen and (max-width: 800px) {
    article {
     margin: 0;
    padding: 90px 10px;
   }
   article h1 {
     font-size: 3.2em;
     font-weight: 800;
     line-height: 1em;
   }
   .heading {
    padding: 1em;
   }
   }
</style>

